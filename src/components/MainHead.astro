---
import '../styles/global.css';

interface Props {
	title?: string | undefined;
	description?: string | undefined;
}

const {
	title = 'ELAVARASAN: Portfolio Site',
	description = 'The personal site of Prince',
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<meta name="generator" content={Astro.generator} />


    <!-- SEO Meta Tags -->
    <meta name="description" content="I'm a passionate software developer and open-source enthusiast hailing from Chennai, India. Although my educational background is in B.Com, my true passion lies in web development. Currently, I am pursuing my MCA and actively working towards honing my skills in this exciting field.">
    <meta name="author" content="Prince">

    <!-- OG Meta Tags to improve the way the post looks when you share the page on Facebook, Twitter, LinkedIn -->
	<meta property="og:site_name" content="ELAVARASAN" /> <!-- website name -->
	<meta property="og:site" content="https://elavarasan.me" /> <!-- website link -->
	<meta property="og:title" content="Portfolio"/> <!-- title shown in the actual shared post -->
	<meta property="og:image" content="https://raw.githubusercontent.com/follow-prince/WorkFolio/main/public/assets/Screenshot%20from%202023-09-11%2021-19-27.png" /> <!-- image link, make sure it's jpg -->
	<meta property="og:url" content="https://elavarasan.me" /> <!-- where do you want your post to link to -->
	<meta name="twitter:card" content="summary_large_image"> <!-- to have large image post format in Twitter -->



<title>{title}</title>

<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
	href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
	rel="stylesheet"
/>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">

<script is:inline>
	// This code is inlined in the head to make dark mode instant & blocking.
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('theme-dark');

	if (typeof localStorage !== 'undefined') {
		// Watch the document element and persist user preference when it changes.
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('theme-dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
